{"version":3,"sources":["action.js","constants.js","components/HeaderBar.js","components/home.js","components/UserList.js","App.js","serviceWorker.js","reducer.js","store.js","index.js"],"names":["searchSuccess","filteredList","type","payload","sortbyAgeSuccess","users","HeaderBar","useSelector","gState","searchTerm","error","sortTerm","dispatch","useDispatch","Navbar","bg","expand","Brand","href","Toggle","aria-controls","Collapse","id","Nav","className","Link","NavDropdown","title","value","onSelect","event","order","console","log","getState","getSortValue","Item","eventKey","Form","inline","FormControl","placeholder","onChange","svalue","term","target","Button","variant","home","UserList","sortOrder","useEffect","axios","get","then","response","data","results","catch","getUserFailure","newList","filter","user","name","first","toLowerCase","includes","map","filteredUser","push","searchbyName","sort","a","b","dob","age","sortByAge","item","key","src","picture","medium","last","gender","phone","v4","App","exact","path","component","Users","Home","Boolean","window","location","hostname","match","initialState","store","createStore","state","action","compose","applyMiddleware","thunk","composeWithDevTools","ReactDOM","render","basename","document","getElementById","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"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","file":"static/js/main.98d8406a.chunk.js","sourcesContent":["import {GET_USERS_REQUEST,  GET_USERS_SUCCESS, GET_USERS_FAILURE, SEACH_BY_NAME, SORT_BY_AGE} from \"./constants\"\r\nimport {GET_SVALUE_REQUEST,  GET_SVALUE_SUCCESS, GET_SVALUE_FAILURE} from \"./constants\"\r\nimport { GET_SORDER_REQUEST, GET_SORDER_SUCCESS, GET_SORDER_FAILURE } from \"./constants\"\r\nimport axios from \"axios\"\r\n\r\n\r\n\r\nconst getUserSuccess = (users) => ({\r\n    type: GET_USERS_SUCCESS,\r\n    payload: users\r\n  })\r\n  //When Request from API fails\r\n  const getUserFailure = (error) => ({\r\n    type: GET_USERS_FAILURE,\r\n    payload: error,\r\n  })\r\n  \r\n  export const  getUsers = () =>{\r\n      return(dispatch, getState) => {\r\n          dispatch({type: GET_USERS_REQUEST})\r\n          axios\r\n             .get(\"https://randomuser.me/api/?inc=gender,name,picture,dob,phone&results=5\")\r\n             \r\n             .then((response) => {\r\n                console.log(response.data.results)\r\n                dispatch(getUserSuccess(response.data.results))\r\n             })\r\n             .catch((error) =>{\r\n                 dispatch(getUserFailure(error))\r\n             })\r\n      }\r\n  }\r\n\r\n  const getSvalueSuccess = (searchTerm) => ({\r\n    type: GET_SVALUE_SUCCESS,\r\n    payload: searchTerm\r\n  })\r\n  //When Request from API fails\r\n  const getSvalueFailure = (error) => ({\r\n    type: GET_SVALUE_FAILURE,\r\n    payload: error,\r\n  })\r\n\r\n  export const getSvalue = (svalue) =>{\r\n      return (dispatch, getState) => {\r\n          dispatch({type: GET_SVALUE_REQUEST})\r\n          if(svalue){\r\n              dispatch(getSvalueSuccess(svalue))\r\n          }else{\r\n              dispatch(getSvalueFailure())\r\n          }\r\n      }\r\n\r\n  }\r\n  const searchSuccess = (filteredList) => ({\r\n    type: SEACH_BY_NAME,\r\n    payload: filteredList\r\n  })\r\n  \r\n  export const searchbyName = (searchTerm, users) =>{\r\n      return (dispatch, getState) =>{\r\n        let newList = []\r\n          if(searchTerm)(\r\n              users.filter(user => user.name.first.toLowerCase().includes(searchTerm)).map(filteredUser =>{\r\n                  newList.push(filteredUser)\r\n                  dispatch(searchSuccess(newList))\r\n              })\r\n          )\r\n          else (\r\n              dispatch(searchSuccess())\r\n          )\r\n      }\r\n  }\r\n\r\n\r\n  const getSorderSuccess = (sortOrder) => ({\r\n    type: GET_SORDER_SUCCESS,\r\n    payload: sortOrder\r\n  })\r\n  //When Request from API fails\r\n  const getSorderFailure = (error) => ({\r\n    type: GET_SORDER_FAILURE,\r\n    payload: error,\r\n  })\r\n\r\n  export const getSortValue = (order) =>{\r\n      return (dispatch, getState) => {\r\n          dispatch({type: GET_SORDER_REQUEST})\r\n          if(order){\r\n              dispatch(getSorderSuccess(order))\r\n          }else{\r\n              dispatch(getSorderFailure())\r\n          }\r\n      }\r\n\r\n  }\r\n\r\n  const sortbyAgeSuccess = (users) => ({\r\n    type: SORT_BY_AGE,\r\n    payload: users\r\n  })\r\n  export const sortByAge = (sortOrder, users) =>{\r\n      return (dispatch, getState) =>{\r\n        switch(sortOrder) {\r\n            case \"asc\":\r\n                users.sort((a,b)=> (a.dob.age>b.dob.age) ? 1 : -1)\r\n                // list.sort((a, b) => (a.color > b.color) ? 1 : -1)\r\n                console.log(users)\r\n                dispatch(sortbyAgeSuccess(users))\r\n                break;\r\n            case \"dsc\":\r\n                users.sort((a,b)=> (a.dob.age < b.dob.age) ? 1 : -1 )\r\n                console.log(users)\r\n                dispatch(sortbyAgeSuccess(users))\r\n                break;\r\n            default:\r\n                return users;\r\n        }\r\n      }\r\n  }\r\n","export const GET_USERS_REQUEST = 'GET_USERS_REQUEST';\r\nexport const GET_USERS_SUCCESS = 'GET_USERS_SUCCESS';\r\nexport const GET_USERS_FAILURE = 'GET_USERS_FAILURE';\r\nexport const GET_SVALUE_REQUEST = \"GET_SVALUE_REQUEST\";\r\nexport const GET_SVALUE_SUCCESS = \"GET_SVALUE_SUCCESS\";\r\nexport const GET_SVALUE_FAILURE = \"GET_SVALUE_FAILURE\";\r\nexport const SEACH_BY_NAME = \"SEARCH_BY_NAME\";\r\nexport const GET_SORDER_REQUEST = \"GET_SORDER_REQUEST\";\r\nexport const GET_SORDER_SUCCESS = \"GET_SORDER_SUCCESS\";\r\nexport const GET_SORDER_FAILURE = \"GET_SORDER_FAILURE\";\r\nexport const SORT_BY_AGE =\"SORT_BY_AGE\"","import React from 'react'\r\nimport { Navbar, Nav, NavDropdown, Form, FormControl, Button } from \"react-bootstrap\"\r\nimport { useSelector, useDispatch } from \"react-redux\"\r\nimport {getSvalue, getSortValue} from \"../action\"\r\n\r\nexport default function HeaderBar() {\r\n  const [searchTerm, error, sortTerm] = useSelector((gState) => [\r\n    gState.searchTerm,\r\n    gState.error,\r\n    gState.sortTerm,\r\n])\r\n  const dispatch = useDispatch()\r\n  const handleChange = event => {\r\n  let term = event.target.value\r\n  dispatch(getSvalue(term))\r\n    \r\n  };\r\n\r\n  const sortHandleChange = event => {\r\n    let order = event\r\n    console.log(order)\r\n    dispatch(getSortValue(order))\r\n\r\n  }\r\n\r\n    return (\r\n        <div>\r\n            <Navbar bg=\"light\" expand=\"lg\">\r\n  <Navbar.Brand href=\"/\">User Directory</Navbar.Brand>\r\n  <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\r\n  <Navbar.Collapse id=\"basic-navbar-nav\">\r\n    <Nav className=\"mr-auto\">\r\n      <Nav.Link href=\"/About\">About</Nav.Link>\r\n      <NavDropdown title=\"Sort List by Age\" id=\"basic-nav-dropdown\" value={sortTerm} onSelect={sortHandleChange}>\r\n        <NavDropdown.Item eventKey=\"asc\" >ASCENDING</NavDropdown.Item>\r\n        <NavDropdown.Item eventKey=\"dsc\">DESCENDING</NavDropdown.Item>\r\n        {/* <NavDropdown.Item href=\"#action/3.2\">Alphabetically</NavDropdown.Item>\r\n        <NavDropdown.Item href=\"#action/3.3\">Seniority</NavDropdown.Item>\r\n        <NavDropdown.Divider />\r\n        <NavDropdown.Item href=\"#action/3.4\">Separated link</NavDropdown.Item> */}\r\n      </NavDropdown>\r\n    </Nav>\r\n    <Form inline>\r\n      <FormControl type=\"text\" placeholder=\"Search by first name\" className=\"search\" value={searchTerm} onChange={handleChange} />\r\n      <Button variant=\"outline-success\">Search</Button>\r\n    </Form>\r\n  </Navbar.Collapse>\r\n</Navbar>\r\n        </div>\r\n    )\r\n}\r\n\r\n","import React from 'react'\r\n\r\n\r\n\r\nexport default function home() {\r\n\r\n\r\n    return (\r\n\r\n        <div>\r\n            <h1>This is a react based app with functionality of a directory</h1>\r\n\r\n                <h2>Apped was created using \"create-react-app</h2>\r\n                <p> Other techlogies used are react-redux, redux thunk, react-bootstrap, react-router and bootstrap cdn</p>\r\n                <p>Within the scope of this assignment no database is required and all data is reset once page is refreshed</p>\r\n                <p> Api Used for random user generation is randomme.com</p>\r\n                \r\n                <h2> App relies mainly on hooks to pass states from component to component</h2>\r\n                <p> User can sort list by age ascending and descending</p>\r\n                <p> User can search by first name and component rerenders as you type in seacr bar. If no match original state is returned</p>\r\n\r\n                \r\n                <h3>Checkout git repo for code details https://github.com/agnide4/employee-directory </h3>\r\n            \r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport {useState, useEffect} from \"react\"\r\nimport { useSelector, useDispatch } from \"react-redux\"\r\nimport { getUsers, searchbyName, sortByAge } from '../action';\r\nimport { v4 } from \"uuid\"\r\nimport \"../App.css\"\r\n\r\n\r\n\r\nexport default function UserList() {\r\n    // const [users, setUsers] = useState([\r\n    //     // {   \r\n    //     //     id: 1,\r\n    //     //     lName: \"Java\",\r\n    //     //     fName: \"Learn\",\r\n    //     //     gender: \"female\",\r\n    //     //     age: 30,\r\n    //     //     isActive: false\r\n    //     // },\r\n    //     // {\r\n    //     //     id: 2,\r\n    //     //     lName: \"Mike\",\r\n    //     //     fName: \"Teach\",\r\n    //     //     gender: \"male\",\r\n    //     //     age: 60,\r\n    //     //     isActive: true\r\n    //     // },\r\n    //     // {\r\n    //     //     id: 3,\r\n    //     //     lName: \"Assemply\",\r\n    //     //     fName: \"move\",\r\n    //     //     gender: \"female\",\r\n    //     //     age: 85,\r\n    //     //     isActive: true\r\n    //     // }\r\n\r\n    // ])\r\n    \r\n   const dispatch = useDispatch();\r\n    const [users, error, searchTerm, filteredList, sortOrder] = useSelector((gState) => [\r\n        gState.users,\r\n        gState.error,\r\n        gState.searchTerm,\r\n        gState.filteredList,\r\n        gState.sortOrder\r\n    ])\r\n\r\n    useEffect(() => {\r\n        dispatch(getUsers());\r\n    },[]);\r\n\r\n    useEffect(() => {\r\n        dispatch(searchbyName(searchTerm, users))\r\n    },[searchTerm]);\r\n\r\n    useEffect(() => {\r\n        dispatch(sortByAge(sortOrder, users))\r\n    },[sortOrder]);\r\n\r\n   \r\n    \r\n\r\n    \r\n\r\n    return (\r\n\r\n        <div>\r\n            {\r\n                filteredList ? (\r\n                    filteredList.map((item, id) => (\r\n                        <div key={id = item.id} className= \"userDiv\" >\r\n                            <span><img src={item.picture.medium} ></img></span> <h3>{item.name.first} {item.name.last} </h3>\r\n                            <p>Gender: {item.gender} Phone number: {item.phone} Age: {item.dob.age}</p>\r\n                        </div>\r\n                        \r\n                    ))\r\n\r\n                ): users ? (\r\n                    users.map((user, id) =>(\r\n                        <div  key={id = v4()} className= \"userDiv\" >\r\n                            <span><img src={user.picture.medium} ></img></span> <h3>{user.name.first} {user.name.last} </h3>\r\n                            <p>Gender: {user.gender} Phone number: {user.phone} Age: {user.dob.age}</p>\r\n                               \r\n                        </div>\r\n                    ))\r\n                ): <p>none</p>\r\n                \r\n            }\r\n        </div>\r\n    )\r\n}\r\n","import userEvent from '@testing-library/user-event';\nimport React from 'react';\nimport { BrowserRouter as Router, Route} from \"react-router-dom\"\nimport './App.css';\nimport HeaderBar from './components/HeaderBar';\nimport Home from './components/home';\nimport Users from './components/UserList';\n\nfunction App() {\n  return (\n   \n        <div className=\"App container-fluid\">\n            <Route exact path=\"/\" component={HeaderBar} />\n            <Route exact path=\"/\" component={Users} />\n            <Route exact path=\"/About\" component={Home} />\n        </div>\n    \n    \n  );\n}\n\n// const Home = () => <div><h2>Home</h2></div>\n// const About = () => <div><h2>About</h2></div>\n\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import {GET_USERS_REQUEST,  GET_USERS_SUCCESS, GET_USERS_FAILURE, GET_SVALUE_REQUEST, GET_SVALUE_SUCCESS, GET_SVALUE_FAILURE} from \"./constants\"\r\nimport { GET_SORDER_REQUEST, GET_SORDER_SUCCESS, GET_SORDER_FAILURE } from \"./constants\"\r\nimport {SEACH_BY_NAME} from \"./constants\"\r\n\r\n\r\nexport const initialState = {\r\n    users: [],\r\n    searchTerm: \"\",\r\n    filteredList: [],\r\n    sortOrder:\"\",\r\n    error: \"\"\r\n  };\r\n\r\n\r\n  export default (state = initialState, action) => {\r\n      switch(action.type){\r\n          case GET_USERS_REQUEST:\r\n              return {...state, users: [], error: null}\r\n          case GET_USERS_SUCCESS: \r\n              return {...state, users: action.payload, error: null}\r\n          case GET_USERS_FAILURE: \r\n              return {...state, error: action.payload}\r\n          case GET_SVALUE_REQUEST:\r\n              return {...state, searchTerm: \"\", error: null}\r\n          case GET_SVALUE_SUCCESS:\r\n              return {...state, searchTerm: action.payload, error: null}\r\n          case GET_SVALUE_FAILURE:\r\n              return {...state, error: action.payload}\r\n        case GET_SORDER_REQUEST:\r\n                return {...state, sortOrder: \"\", error: null}\r\n        case GET_SORDER_SUCCESS:\r\n                return {...state, sortOrder: action.payload, error: null}\r\n        case GET_SORDER_FAILURE:\r\n                return {...state, error: action.payload}\r\n         case SEACH_BY_NAME:\r\n              return {...state, filteredList:action.payload, error: null}\r\n          default:\r\n              return state\r\n      }\r\n  }","import { createStore, applyMiddleware, compose } from 'redux';\r\nimport reducer, { initialState } from './reducer';\r\nimport { composeWithDevTools } from 'redux-devtools-extension';\r\nimport thunk from 'redux-thunk';\r\n\r\nconst store = createStore(\r\n  reducer,\r\n  initialState,\r\n  compose(applyMiddleware(thunk), composeWithDevTools())\r\n);\r\n\r\n\r\nexport default store","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport {Provider} from 'react-redux'\nimport store from './store'\nimport { HashRouter as Router, Route } from \"react-router-dom\"\n\n\nReactDOM.render(\n  // <React.StrictMode>\n  //   <App />\n  // </React.StrictMode>,\n\n<Provider store={store}>\n<Router basename=\"/#\">\n  <App />\n</Router>\n</Provider>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}